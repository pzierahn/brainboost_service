syntax = "proto3";

option go_package = "./proto";

package chatbot.chat.v5;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "collection_service.proto";

service ChatService {
  rpc PostMessage(Prompt) returns (Message);
  rpc GetThread(ThreadID) returns (Thread);
  rpc ListThreadIDs(collections.v2.Collection) returns (ThreadIDs);
  rpc DeleteThread(ThreadID) returns (google.protobuf.Empty);
  rpc DeleteMessageFromThread(MessageID) returns (google.protobuf.Empty);
  rpc Completion(CompletionRequest) returns (CompletionResponse);
}

message CompletionRequest {
  string document_id = 1;
  string prompt = 2;
  ModelOptions model_options = 3;
}

message CompletionResponse {
  string completion = 1;
}

message BatchRequest {
  repeated string document_ids = 1;
  repeated string prompts = 2;
  ModelOptions model_options = 3;
}

message BatchResponse {
  repeated string document_ids = 1;
  repeated string prompts = 2;
  repeated string prompt_title = 3;

  message Completion {
    uint32 document_id = 1;
    string document_title = 2;
    uint32 prompt = 3;
    string completion = 4;
  }

  repeated Completion items = 4;
}

message Prompt {
  // Thread ID to post the message to
  string thread_id = 1;

  // Prompt to generate completion
  string prompt = 2;

  // Model options
  ModelOptions model_options = 3;

  // Search options
  RetrievalOptions retrieval_options = 4;
}

message ModelOptions {
  string model_id = 1;
  float temperature = 2;
  uint32 max_tokens = 3;
  float top_p = 4;
}

message RetrievalOptions {
  float threshold = 1;
  uint32 documents = 2;
}

message Message {
  // Unique ID of the message
  string id = 1;

  // Prompt used to generate the message
  string prompt = 2;

  // Generated completion
  string completion = 3;

  // Timestamp of the message
  google.protobuf.Timestamp timestamp = 4;

  // ReferenceIDs and their scores
  map<string, float> references = 5;
}

message Thread {
  string id = 1;
  repeated Message messages = 2;
}

message ThreadID {
  string id = 1;
}

message MessageID {
  string id = 1;
  string thread_id = 2;
}

message ThreadIDs {
  repeated string ids = 1;
}
