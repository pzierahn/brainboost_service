// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: notion.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotionApiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *NotionApiKey) Reset() {
	*x = NotionApiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionApiKey) ProtoMessage() {}

func (x *NotionApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionApiKey.ProtoReflect.Descriptor instead.
func (*NotionApiKey) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{0}
}

func (x *NotionApiKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type NotionPrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatabaseId   string        `protobuf:"bytes,1,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	CollectionId string        `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Prompt       string        `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	ModelOptions *ModelOptions `protobuf:"bytes,4,opt,name=modelOptions,proto3" json:"modelOptions,omitempty"`
}

func (x *NotionPrompt) Reset() {
	*x = NotionPrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionPrompt) ProtoMessage() {}

func (x *NotionPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionPrompt.ProtoReflect.Descriptor instead.
func (*NotionPrompt) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{1}
}

func (x *NotionPrompt) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *NotionPrompt) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *NotionPrompt) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *NotionPrompt) GetModelOptions() *ModelOptions {
	if x != nil {
		return x.ModelOptions
	}
	return nil
}

type ExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document string `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *ExecutionResult) Reset() {
	*x = ExecutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResult) ProtoMessage() {}

func (x *ExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResult.ProtoReflect.Descriptor instead.
func (*ExecutionResult) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutionResult) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

type DatabasesID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DatabasesID) Reset() {
	*x = DatabasesID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabasesID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabasesID) ProtoMessage() {}

func (x *DatabasesID) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabasesID.ProtoReflect.Descriptor instead.
func (*DatabasesID) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{3}
}

func (x *DatabasesID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Databases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Databases_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Databases) Reset() {
	*x = Databases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Databases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Databases) ProtoMessage() {}

func (x *Databases) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Databases.ProtoReflect.Descriptor instead.
func (*Databases) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{4}
}

func (x *Databases) GetItems() []*Databases_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type Databases_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Databases_Item) Reset() {
	*x = Databases_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Databases_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Databases_Item) ProtoMessage() {}

func (x *Databases_Item) ProtoReflect() protoreflect.Message {
	mi := &file_notion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Databases_Item.ProtoReflect.Descriptor instead.
func (*Databases_Item) Descriptor() ([]byte, []int) {
	return file_notion_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Databases_Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Databases_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_notion_proto protoreflect.FileDescriptor

var file_notion_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x62, 0x6f, 0x74, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x73, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x2a, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xbf, 0x03, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62,
	0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73,
	0x12, 0x56, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notion_proto_rawDescOnce sync.Once
	file_notion_proto_rawDescData = file_notion_proto_rawDesc
)

func file_notion_proto_rawDescGZIP() []byte {
	file_notion_proto_rawDescOnce.Do(func() {
		file_notion_proto_rawDescData = protoimpl.X.CompressGZIP(file_notion_proto_rawDescData)
	})
	return file_notion_proto_rawDescData
}

var file_notion_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_notion_proto_goTypes = []any{
	(*NotionApiKey)(nil),    // 0: chatbot.notion.v2.NotionApiKey
	(*NotionPrompt)(nil),    // 1: chatbot.notion.v2.NotionPrompt
	(*ExecutionResult)(nil), // 2: chatbot.notion.v2.ExecutionResult
	(*DatabasesID)(nil),     // 3: chatbot.notion.v2.DatabasesID
	(*Databases)(nil),       // 4: chatbot.notion.v2.Databases
	(*Databases_Item)(nil),  // 5: chatbot.notion.v2.Databases.Item
	(*ModelOptions)(nil),    // 6: chatbot.chat.v5.ModelOptions
	(*emptypb.Empty)(nil),   // 7: google.protobuf.Empty
}
var file_notion_proto_depIdxs = []int32{
	6, // 0: chatbot.notion.v2.NotionPrompt.modelOptions:type_name -> chatbot.chat.v5.ModelOptions
	5, // 1: chatbot.notion.v2.Databases.items:type_name -> chatbot.notion.v2.Databases.Item
	0, // 2: chatbot.notion.v2.Notion.InsertAPIKey:input_type -> chatbot.notion.v2.NotionApiKey
	0, // 3: chatbot.notion.v2.Notion.UpdateAPIKey:input_type -> chatbot.notion.v2.NotionApiKey
	7, // 4: chatbot.notion.v2.Notion.DeleteAPIKey:input_type -> google.protobuf.Empty
	7, // 5: chatbot.notion.v2.Notion.GetAPIKey:input_type -> google.protobuf.Empty
	7, // 6: chatbot.notion.v2.Notion.ListDatabases:input_type -> google.protobuf.Empty
	1, // 7: chatbot.notion.v2.Notion.ExecutePrompt:input_type -> chatbot.notion.v2.NotionPrompt
	7, // 8: chatbot.notion.v2.Notion.InsertAPIKey:output_type -> google.protobuf.Empty
	7, // 9: chatbot.notion.v2.Notion.UpdateAPIKey:output_type -> google.protobuf.Empty
	7, // 10: chatbot.notion.v2.Notion.DeleteAPIKey:output_type -> google.protobuf.Empty
	0, // 11: chatbot.notion.v2.Notion.GetAPIKey:output_type -> chatbot.notion.v2.NotionApiKey
	4, // 12: chatbot.notion.v2.Notion.ListDatabases:output_type -> chatbot.notion.v2.Databases
	2, // 13: chatbot.notion.v2.Notion.ExecutePrompt:output_type -> chatbot.notion.v2.ExecutionResult
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_notion_proto_init() }
func file_notion_proto_init() {
	if File_notion_proto != nil {
		return
	}
	file_chat_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_notion_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NotionApiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NotionPrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExecutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DatabasesID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Databases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Databases_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notion_proto_goTypes,
		DependencyIndexes: file_notion_proto_depIdxs,
		MessageInfos:      file_notion_proto_msgTypes,
	}.Build()
	File_notion_proto = out.File
	file_notion_proto_rawDesc = nil
	file_notion_proto_goTypes = nil
	file_notion_proto_depIdxs = nil
}
